input {
	tcp {
		port => 5000
        type => "technical"
	}
    tcp {
        port => 5001
       type => "technical1"
  
    }
       tcp {
        port => 5003
       type => "technicalflask"
  
    }

  tcp {
        port => 5002
       type => "technical2"
         codec => "json"
    }
	gelf {
	   port => 5000
	}
     beats {
    port => 5044
    codec => line
  }
}
filter {

 if [type] == "technical1" {
  json {
        source => "message"
        target => "myroot"
    }

 }


   if [type] == "technicalflask" {
          
            grok {
            match => { "message" => "%{IPORHOST:clientip} %{USER:ident} %{USER:auth} \[%{DATA:timestamp}\]" }
        }
        if "_grokparsefailure" in [tags] {
            # Grok parser failed :(
        }
        else {
            # Type casting for Kibana
            mutate {
                convert => { "bytes" => "integer" }
            }
        }
        
        }

   if [type] == "technical2" {
          
            grok {
            match => { "message" => "%{COMBINEDAPACHELOG} %{QS:x_forwarded_for} %{QS:domain_host}" }
        }
        if "_grokparsefailure" in [tags] {
            # Grok parser failed :(
        }
        else {
            # Type casting for Kibana
            mutate {
                convert => { "bytes" => "integer" }
            }
        }
        
        }

 if [type] == "technical" {
          
            grok {
            match => { "message" => "%{COMBINEDAPACHELOG}" }
        }
        if "_grokparsefailure" in [tags] {
            # Grok parser failed :(
        }
        else {
            # Type casting for Kibana
            mutate {
                convert => { "bytes" => "integer" }
            }
        }
        
    }

    # docker run --log-driver=gelf --log-opt tag="nginx" ...
    if [tag] == 'nginx' {
        # Nginx logs are formatted the same as Apache logs.  Use the Apache filter that ships with Logstash
        # https://github.com/logstash-plugins/logstash-patterns-core/blob/master/patterns/grok-patterns#L94
        grok {
            match => { "message" => "%{COMBINEDAPACHELOG}" }
        }
        if "_grokparsefailure" in [tags] {
            # Grok parser failed :(
        }
        else {
            # Type casting for Kibana
            mutate {
                convert => { "bytes" => "integer" }
            }
        }
}
if [tag] == 'flask' {
        # Nginx logs are formatted the same as Apache logs.  Use the Apache filter that ships with Logstash
        # https://github.com/logstash-plugins/logstash-patterns-core/blob/master/patterns/grok-patterns#L94
        grok {
            match => { "message" => "%{IPORHOST:clientip} %{USER:ident} %{USER:auth} \[%{DATA:logtimestamp}\] \"(?:%{WORD:verb} %{NOTSPACE:request}(?: HTTP/%{NUMBER:httpversion})?|%{DATA:rawrequest})\"" }
            add_field => [ "id_error", "2" ]

        }
        if "_grokparsefailure" in [tags] {
            # Grok parser failed :(
        }
        else {
            # Type casting for Kibana
            mutate {
                convert => { "bytes" => "integer" }
            }
        }
}

}
## Add your filters / logstash plugins configuration here

output {
	elasticsearch {
		hosts => "elasticsearch:9200"
	}
}
